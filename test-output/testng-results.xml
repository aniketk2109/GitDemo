<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="11" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-09-09T12:16:41 IST" name="Loan Department" finished-at="2023-09-09T12:16:41 IST" duration-ms="113">
    <groups>
      <group name="Smoke">
        <method signature="Day2.ploan()[pri:0, instance:test.Day2@4145bad8]" name="ploan" class="test.Day2"/>
        <method signature="Day3.MobileLogincarLoan()[pri:0, instance:test.Day3@d86a6f]" name="MobileLogincarLoan" class="test.Day3"/>
        <method signature="Day4.MobileLoginHomeLoan()[pri:0, instance:test.Day4@2892d68]" name="MobileLoginHomeLoan" class="test.Day4"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2023-09-09T12:16:41 IST" name="Personal Loan" finished-at="2023-09-09T12:16:41 IST" duration-ms="113">
      <class name="test.Day1">
        <test-method signature="Demo()[pri:0, instance:test.Day1@1e6a3214]" started-at="2023-09-09T12:16:41 IST" name="Demo" finished-at="2023-09-09T12:16:41 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method signature="SecondTest()[pri:0, instance:test.Day1@1e6a3214]" started-at="2023-09-09T12:16:41 IST" name="SecondTest" finished-at="2023-09-09T12:16:41 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SecondTest -->
        <test-method is-config="true" signature="lastexecution()[pri:0, instance:test.Day1@1e6a3214]" started-at="2023-09-09T12:16:41 IST" name="lastexecution" finished-at="2023-09-09T12:16:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastexecution -->
        <test-method is-config="true" signature="afSyite()[pri:0, instance:test.Day1@1e6a3214]" started-at="2023-09-09T12:16:41 IST" name="afSyite" finished-at="2023-09-09T12:16:41 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afSyite -->
      </class> <!-- test.Day1 -->
      <class name="test.Day2">
        <test-method is-config="true" signature="prerequisite()[pri:0, instance:test.Day2@4145bad8]" started-at="2023-09-09T12:16:41 IST" name="prerequisite" finished-at="2023-09-09T12:16:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequisite -->
        <test-method signature="ploan()[pri:0, instance:test.Day2@4145bad8]" started-at="2023-09-09T12:16:41 IST" name="ploan" finished-at="2023-09-09T12:16:41 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ploan -->
      </class> <!-- test.Day2 -->
      <class name="test.Day3">
        <test-method is-config="true" signature="Bfsuite()[pri:0, instance:test.Day3@d86a6f]" started-at="2023-09-09T12:16:41 IST" name="Bfsuite" finished-at="2023-09-09T12:16:41 IST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Bfsuite -->
        <test-method is-config="true" signature="befoclas()[pri:0, instance:test.Day3@d86a6f]" started-at="2023-09-09T12:16:41 IST" name="befoclas" finished-at="2023-09-09T12:16:41 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- befoclas -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.Day3@d86a6f]" started-at="2023-09-09T12:16:41 IST" name="beforeevery" finished-at="2023-09-09T12:16:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="MobileLogincarLoan()[pri:0, instance:test.Day3@d86a6f]" started-at="2023-09-09T12:16:41 IST" name="MobileLogincarLoan" finished-at="2023-09-09T12:16:41 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLogincarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.Day3@d86a6f]" started-at="2023-09-09T12:16:41 IST" name="afterevery" finished-at="2023-09-09T12:16:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method signature="Mobilesignotloan(java.lang.String,java.lang.String)[pri:0, instance:test.Day3@d86a6f]" started-at="2023-09-09T12:16:41 IST" name="Mobilesignotloan" data-provider="getData" finished-at="2023-09-09T12:16:41 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mobilesignotloan -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.Day3@d86a6f]" started-at="2023-09-09T12:16:41 IST" name="beforeevery" finished-at="2023-09-09T12:16:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.Day3@d86a6f]" started-at="2023-09-09T12:16:41 IST" name="afterevery" finished-at="2023-09-09T12:16:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method signature="Mobilesignotloan(java.lang.String,java.lang.String)[pri:0, instance:test.Day3@d86a6f]" started-at="2023-09-09T12:16:41 IST" name="Mobilesignotloan" data-provider="getData" finished-at="2023-09-09T12:16:41 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mobilesignotloan -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.Day3@d86a6f]" started-at="2023-09-09T12:16:41 IST" name="beforeevery" finished-at="2023-09-09T12:16:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.Day3@d86a6f]" started-at="2023-09-09T12:16:41 IST" name="afterevery" finished-at="2023-09-09T12:16:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.Day3@d86a6f]" started-at="2023-09-09T12:16:41 IST" name="beforeevery" finished-at="2023-09-09T12:16:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="Mobilesignotloan(java.lang.String,java.lang.String)[pri:0, instance:test.Day3@d86a6f]" started-at="2023-09-09T12:16:41 IST" name="Mobilesignotloan" data-provider="getData" finished-at="2023-09-09T12:16:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mobilesignotloan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.Day3@d86a6f]" started-at="2023-09-09T12:16:41 IST" name="afterevery" finished-at="2023-09-09T12:16:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.Day3@d86a6f]" started-at="2023-09-09T12:16:41 IST" name="beforeevery" finished-at="2023-09-09T12:16:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="WebloginCarLoan()[pri:0, instance:test.Day3@d86a6f]" started-at="2023-09-09T12:16:41 IST" name="WebloginCarLoan" finished-at="2023-09-09T12:16:41 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebloginCarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.Day3@d86a6f]" started-at="2023-09-09T12:16:41 IST" name="afterevery" finished-at="2023-09-09T12:16:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method signature="WebloginCarLoans(java.lang.String,java.lang.String)[pri:0, instance:test.Day3@d86a6f]" started-at="2023-09-09T12:16:41 IST" name="WebloginCarLoans" finished-at="2023-09-09T12:16:41 IST" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'URL' is required by @Test on method WebloginCarLoans but has not been marked @Optional or defined
in C:\Users\Admin\eclipse-workspace\TestNGTutorial\testng2.xml]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'URL' is required by @Test on method WebloginCarLoans but has not been marked @Optional or defined
in C:\Users\Admin\eclipse-workspace\TestNGTutorial\testng2.xml
at org.testng.internal.Parameters.createParams(Parameters.java:267)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:355)
at org.testng.internal.Parameters.createParameters(Parameters.java:684)
at org.testng.internal.Parameters.handleParameters(Parameters.java:879)
at org.testng.internal.Parameters.handleParameters(Parameters.java:728)
at org.testng.internal.invokers.ParameterHandler.handleParameters(ParameterHandler.java:72)
at org.testng.internal.invokers.ParameterHandler.createParameters(ParameterHandler.java:51)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:911)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebloginCarLoans -->
        <test-method is-config="true" signature="afterclas()[pri:0, instance:test.Day3@d86a6f]" started-at="2023-09-09T12:16:41 IST" name="afterclas" finished-at="2023-09-09T12:16:41 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclas -->
      </class> <!-- test.Day3 -->
      <class name="test.Day4">
        <test-method signature="LoginAPIHomeLoan()[pri:0, instance:test.Day4@2892d68]" started-at="2023-09-09T12:16:41 IST" name="LoginAPIHomeLoan" finished-at="2023-09-09T12:16:41 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPIHomeLoan -->
        <test-method signature="MobileLoginHomeLoan()[pri:0, instance:test.Day4@2892d68]" started-at="2023-09-09T12:16:41 IST" name="MobileLoginHomeLoan" finished-at="2023-09-09T12:16:41 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginHomeLoan -->
        <test-method signature="WebloginHomeLoan()[pri:0, instance:test.Day4@2892d68]" started-at="2023-09-09T12:16:41 IST" name="WebloginHomeLoan" finished-at="2023-09-09T12:16:41 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebloginHomeLoan -->
      </class> <!-- test.Day4 -->
    </test> <!-- Personal Loan -->
  </suite> <!-- Loan Department -->
</testng-results>
